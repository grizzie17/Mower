{
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	"version": "2.0.0",
	"options": {
		"env": {
			"__STDC_WANT_SECURE_LIB__": "1"
		}
	},
	"tasks": [
		// {
		// 	"label": "build-config",
		// 	"type": "shell",
		// 	"command": "./build-config.sh",
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"severity": 2,
		// 			"message": 3
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build-config  --clean",
		// 	"type": "shell",
		// 	"command": "./build-config.sh --clean",
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):\\s+([^:]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"severity": 3,
		// 			"message": 4
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		{
			"label": "build-clean",
			"type": "shell",
			"command": "./build-clean.sh",
			"group": "build",
			"problemMatcher": [],
			"presentation": {
				"clear": true
			}
		},
		{
			"label": "cmake build all",
			"type": "shell",
			"command": "./build-cmake.sh",
			"args": [
				"-DCMAKE_BUILD_TYPE=DEBUG"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make Mower",
			"type": "shell",
			"command": "make",
			"args": [
				"Mower"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make CMatrix test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_CMatrix4x4"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make CPoint test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_CPoint"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make CVector test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_CVector"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make CUnitVector test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_CUnitVector"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make CPoint2 test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_CPoint2"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make json test",
			"type": "shell",
			"command": "make",
			"args": [
				"simulator_test_jsonRead"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		{
			"label": "make TArray2 test",
			"type": "shell",
			"command": "make",
			"args": [
				"yogi_graphics_test_TArray2"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				{
					"pattern": {
						"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			]
		},
		// {
		// 	"label": "build ALL",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"group": "build",
		// 	"problemMatcher": [
		// 		{
		// 			"pattern": {
		// 				"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 				"file": 1,
		// 				"line": 2,
		// 				"column": 3,
		// 				"severity": 4,
		// 				"message": 5
		// 			}
		// 		},
		// 		{
		// 			"pattern": {
		// 				"regexp": "^\\*+\\s+([^:]+):\\s+(.*)$",
		// 				"severity": 1,
		// 				"message": 2
		// 			}
		// 		},
		// 		{
		// 			"pattern": {
		// 				"regexp": "^libtool:\\s+(warning):\\s+(.*)$",
		// 				"severity": 1,
		// 				"message": 2
		// 			}
		// 		}
		// 	],
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build <currentfile>",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"args": [
		// 		"${relativeFile}"
		// 	],
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"owner": "cpp",
		// 		"fileLocation": [
		// 			"relative",
		// 			"${workspaceFolder}"
		// 		],
		// 		"pattern": {
		// 			"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"column": 3,
		// 			"severity": 4,
		// 			"message": 5
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build  --check <currentFileDirectory>",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"args": [
		// 		"${relativeFile}",
		// 		"-check"
		// 	],
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"column": 3,
		// 			"severity": 4,
		// 			"message": 5
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build  --check ALL",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"args": [
		// 		"ALL",
		// 		"-check"
		// 	],
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"column": 3,
		// 			"severity": 4,
		// 			"message": 5
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build  --install ALL",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"args": [
		// 		"ALL",
		// 		"-install"
		// 	],
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"column": 3,
		// 			"severity": 4,
		// 			"message": 5
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// },
		// {
		// 	"label": "build  --make <currentFileDirectory>",
		// 	"type": "shell",
		// 	"command": "./build.sh",
		// 	"args": [
		// 		"${relativeFile}",
		// 		"-make"
		// 	],
		// 	"group": "build",
		// 	"problemMatcher": {
		// 		"pattern": {
		// 			"regexp": "^([^:]+):([0-9]+):([0-9]+):\\s+([^:]+):\\s+(.*)$",
		// 			"file": 1,
		// 			"line": 2,
		// 			"column": 3,
		// 			"severity": 4,
		// 			"message": 5
		// 		}
		// 	},
		// 	"presentation": {
		// 		"clear": true
		// 	}
		// }
		{
			"label": "pwd",
			"type": "shell",
			"command": "pwd",
			"problemMatcher": []
		},
		{
			"label": "c++ predefined variables",
			"type": "shell",
			"command": "./build-variables.sh",
			"problemMatcher": []
		},
		{
			"label": "c++ predefined include paths",
			"type": "shell",
			"command": "./build-includes.sh",
			"problemMatcher": []
		}
	]
}